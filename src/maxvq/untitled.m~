[x1,f1] = wavread('sound/ssm1.wav'); % Count
[x2,f2] = wavread('sound/ssm2.wav'); % Music


x1 =x1(1:109936/2); % set vectors to equal length
x2 =x2(1:109936/2);

mix = .4*x1 + .6*x2;


window = 512;
noverlap = 500;
nfft = 512;
[S1,F1,T1,P1] = spectrogram(x1,window,noverlap,nfft,f1);
[S2,F2,T2,P2] = spectrogram(x2,window,noverlap,nfft,f2);
[Smix, Fmix, Tmix, Pmix] = spectrogram(mix, window, noverlap, nfft, f2);


%% Plot spectrograms
figure
subplot(311)
surf(T1,F1,10*log10(P1),'edgecolor','none'); axis tight;
view(0,90);
xlabel('Time (Seconds)'); ylabel('Hz'); title('source 1')

subplot(312)
surf(T2,F2,10*log10(P2),'edgecolor','none'); axis tight;
view(0,90);
xlabel('Time (Seconds)'); ylabel('Hz'); title('source 2')

subplot(313)
figure
surf(Tmix,Fmix,10*log10(Pmix),'edgecolor','none'); axis tight;
view(0,90);
xlabel('Time (Seconds)'); ylabel('Hz'); title('recovered music signal')



%% gmm estimation
% Roweis 512 components for voice, 32 for noise
gmm1 = gmdistribution.fit(-log(P1)', 256, 'SharedCov', true, 'CovType', 'diagonal', 'Regularize', 1);
gmm2 = gmdistribution.fit(-log(P2)', 128, 'SharedCov', true, 'CovType', 'diagonal', 'Regularize', 1);

gmms = cell(2,1);
gmms{1} = gmm1;
gmms{2} = gmm2;



%%

masks = cell(length(gmms),1);
for i  = 1:length(masks)
    masks{i} = zeros(size(Pmix));
end

maxidx = zeros(2,size(Pmix,2));

for t = 1:size(Pmix,2)
    
    X = Pmix(:,t)';
    ll = cell(length(gmms),1);
    
    for m  = 1:length(gmms)
        ll{m} = zeros(length(gmms{m}),1);
        sig = inv(diag(gmms{m}.Sigma));
        for k = 1:gmms{m}.NComponents
            mu = gmms{m}.mu(k,:);
            ll{m}(k) = (X - mu)*sig* (X-mu)';
        end
    end
    
    
    maxidx(1,t) = find(ll{1} == max(ll{1}));
    maxidx(2,t) = find(ll{2} == max(ll{2}));
   
    masks{1}(:,t) = gmms{1}.mu(maxidx(1,t))>gmms{2}.mu(maxidx(2,t),:);
    masks{2}(:,t) = gmms{2}.mu(maxidx(2,t))>gmms{1}.mu(maxidx(1,t),:);
    
end




%% Visualize results

rec1 = log10(Pmix).*masks{1};
rec2 = log10(Pmix).*masks{2};

% for i = 1:size(rec1, 2)
%     rec1(masks{1}(:,i) == 0,i) = gmms{1}.mu(maxidx(1,i), masks{1}(:,i) == 0);
%     rec2(masks{2}(:,i) == 0,i) = gmms{2}.mu(maxidx(2,i), masks{2}(:,i) == 0);
% end




figure; surf(Tmix, Fmix, (log10(Pmix)-rec1), 'edgecolor', 'none'); axis tight;shading interp
view(0,90);
xlabel('Time (Seconds)'); ylabel('Hz'); title('recovered 1')

figure; surf(Tmix, Fmix, (log10(Pmix)-rec2), 'edgecolor', 'none'); axis tight;shading interp
view(0,90);
xlabel('Time (Seconds)'); ylabel('Hz'); title('recovered 2')

%%
figure; surf(Tmix, Fmix, log10(Pmix), 'edgecolor', 'none'); axis tight;shading interp
view(0,90);
xlabel('Time (Seconds)'); ylabel('Hz'); title('recovered 2')
